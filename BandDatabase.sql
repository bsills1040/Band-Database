-- MySQL Script generated by MySQL Workbench
-- Fri Jan  3 18:02:36 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Song`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Song` (
  `idSong` INT NOT NULL AUTO_INCREMENT,
  `SongTitle` VARCHAR(45) NULL,
  `Genre` VARCHAR(45) NULL,
  PRIMARY KEY (`idSong`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Band`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Band` (
  `BandID` INT NOT NULL AUTO_INCREMENT,
  `BandName` VARCHAR(45) NULL,
  `EstablishedDate` VARCHAR(45) NULL,
  `Song_idSong` INT NOT NULL,
  PRIMARY KEY (`BandID`),
  INDEX `fk_Band_Song1_idx` (`Song_idSong` ASC) VISIBLE,
  CONSTRAINT `fk_Band_Song1`
    FOREIGN KEY (`Song_idSong`)
    REFERENCES `mydb`.`Song` (`idSong`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Inventory` (
  `InventoryID` INT NOT NULL AUTO_INCREMENT,
  `Amplifer` VARCHAR(45) NULL,
  `effectpedals` VARCHAR(45) NULL,
  `mixers` VARCHAR(45) NULL,
  `cables` VARCHAR(45) NULL,
  `bandMerch` VARCHAR(45) NULL,
  `CDs` VARCHAR(45) NULL,
  `posters` VARCHAR(45) NULL,
  PRIMARY KEY (`InventoryID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`instruments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`instruments` (
  `idinstruments` INT NOT NULL AUTO_INCREMENT,
  `InstrumentName` VARCHAR(45) NULL,
  `Song_idSong` INT NOT NULL,
  `leadSinger` VARCHAR(45) NULL,
  `guitar` VARCHAR(45) NULL,
  `drumbs` VARCHAR(45) NULL,
  `bass` VARCHAR(45) NULL,
  `keyboard` VARCHAR(45) NULL,
  `Inventory_InventoryID` INT NOT NULL,
  `Band_BandID` INT NOT NULL,
  PRIMARY KEY (`idinstruments`),
  INDEX `fk_instruments_Song1_idx` (`Song_idSong` ASC) VISIBLE,
  INDEX `fk_instruments_Inventory1_idx` (`Inventory_InventoryID` ASC) VISIBLE,
  INDEX `fk_instruments_Band1_idx` (`Band_BandID` ASC) VISIBLE,
  CONSTRAINT `fk_instruments_Song1`
    FOREIGN KEY (`Song_idSong`)
    REFERENCES `mydb`.`Song` (`idSong`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_instruments_Inventory1`
    FOREIGN KEY (`Inventory_InventoryID`)
    REFERENCES `mydb`.`Inventory` (`InventoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_instruments_Band1`
    FOREIGN KEY (`Band_BandID`)
    REFERENCES `mydb`.`Band` (`BandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Members` (
  `idMembers` INT NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NULL,
  `address2` VARCHAR(45) NULL,
  `City` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Zip` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `joined Date` VARCHAR(45) NULL,
  `Band_BandID` INT NOT NULL,
  `instruments_idinstruments` INT NOT NULL,
  `Song_idSong` INT NOT NULL,
  PRIMARY KEY (`idMembers`),
  INDEX `fk_Members_Band1_idx` (`Band_BandID` ASC) VISIBLE,
  INDEX `fk_Members_instruments1_idx` (`instruments_idinstruments` ASC) VISIBLE,
  INDEX `fk_Members_Song1_idx` (`Song_idSong` ASC) VISIBLE,
  CONSTRAINT `fk_Members_Band1`
    FOREIGN KEY (`Band_BandID`)
    REFERENCES `mydb`.`Band` (`BandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Members_instruments1`
    FOREIGN KEY (`instruments_idinstruments`)
    REFERENCES `mydb`.`instruments` (`idinstruments`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Members_Song1`
    FOREIGN KEY (`Song_idSong`)
    REFERENCES `mydb`.`Song` (`idSong`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Booking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Booking` (
  `idBooking` INT NOT NULL AUTO_INCREMENT,
  `bandName` VARCHAR(45) NOT NULL,
  `timeofpreform` VARCHAR(45) NOT NULL,
  `Agent` VARCHAR(45) NOT NULL,
  `performancefee` DECIMAL(2) NOT NULL,
  `Band_BandID` INT NOT NULL,
  PRIMARY KEY (`idBooking`),
  INDEX `fk_Booking_Band1_idx` (`Band_BandID` ASC) VISIBLE,
  CONSTRAINT `fk_Booking_Band1`
    FOREIGN KEY (`Band_BandID`)
    REFERENCES `mydb`.`Band` (`BandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`VenueType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`VenueType` (
  `idVenueType` INT NOT NULL AUTO_INCREMENT,
  `typeName` VARCHAR(45) NULL,
  `Booking_idBooking` INT NOT NULL,
  PRIMARY KEY (`idVenueType`),
  INDEX `fk_VenueType_Booking1_idx` (`Booking_idBooking` ASC) VISIBLE,
  CONSTRAINT `fk_VenueType_Booking1`
    FOREIGN KEY (`Booking_idBooking`)
    REFERENCES `mydb`.`Booking` (`idBooking`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Venue`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Venue` (
  `idVenue` INT NOT NULL AUTO_INCREMENT,
  `VenueName` VARCHAR(45) NOT NULL,
  `contactFirst` VARCHAR(45) NOT NULL,
  `ContactLast` VARCHAR(45) NOT NULL,
  `contactEmail` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NULL,
  `address2` VARCHAR(45) NULL,
  `city` VARCHAR(45) NOT NULL,
  `state` VARCHAR(45) NOT NULL,
  `zip` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `website` VARCHAR(45) NOT NULL,
  `VenueType_idVenueType` INT NOT NULL,
  `Inventory_InventoryID` INT NOT NULL,
  PRIMARY KEY (`idVenue`),
  INDEX `fk_Venue_VenueType_idx` (`VenueType_idVenueType` ASC) VISIBLE,
  INDEX `fk_Venue_Inventory1_idx` (`Inventory_InventoryID` ASC) VISIBLE,
  CONSTRAINT `fk_Venue_VenueType`
    FOREIGN KEY (`VenueType_idVenueType`)
    REFERENCES `mydb`.`VenueType` (`idVenueType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venue_Inventory1`
    FOREIGN KEY (`Inventory_InventoryID`)
    REFERENCES `mydb`.`Inventory` (`InventoryID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
